# Obtained from:
# https://github.com/grafana/tempo/blob/main/operations/tempo-mixin-compiled/alerts.yaml

groups:
- name: tempo_alerts
  rules:
  - alert: TempoIngesterUnhealthy
    annotations:
      message: Tempo cluster {{ $labels.cluster }}/{{ $labels.namespace }} has {{
        printf "%f" $value }} unhealthy ingester(s).
      runbook_url: https://grafana.com/docs/tempo/latest/operators-guide/tempo-runbooks/#tempoingesterunhealthy
    expr: |
      min by (cluster, namespace) (cortex_ring_members{state="Unhealthy", name="ingester"}) > 0
    for: 15m
    labels:
      severity: critical
  - alert: TempoWorkerRequestErrors
    annotations:
      message: |
        The route {{ $labels.route }} in {{ $labels.cluster }}/{{ $labels.namespace }} is experiencing {{ printf "%.2f" $value }}% errors.
      runbook_url: https://grafana.com/docs/tempo/latest/operators-guide/tempo-runbooks/#temporequesterrors
    expr: |
      100 * sum by (cluster, namespace, job, route) (rate(cortex_request_duration_seconds_count{status_code=~"5..",route!~"ready|debug_pprof"}[1m]))
        /
      sum by (cluster, namespace, job, route) (rate(cortex_request_duration_seconds_count{route!~"ready|debug_pprof"}[1m]))
        > 1
    for: 15m
    labels:
      severity: critical
  - alert: TempoWorkerRequestLatency
    annotations:
      message: |
        {{ $labels.job }} {{ $labels.route }} is experiencing {{ printf "%.2f" $value }}s 99th percentile latency.
      runbook_url: https://grafana.com/docs/tempo/latest/operators-guide/tempo-runbooks/#temporequestlatency
    expr: |
      cluster_namespace_job_route:cortex_request_duration_seconds:99quantile{route!~"metrics|/frontend.Frontend/Process|ready|/schedulerpb.SchedulerForFrontend/FrontendLoop|/schedulerpb.SchedulerForQuerier/QuerierLoop|debug_pprof"}
         >
      2.5
    for: 15m
    labels:
      severity: warning
  - alert: TempoQueriesIncorrect
    annotations:
      message: |
        The Tempo cluster {{ $labels.cluster }}/{{ $labels.namespace }} is experiencing {{ printf "%.2f" $value }}% incorrect query results.
      runbook_url: https://grafana.com/docs/tempo/latest/operators-guide/tempo-runbooks/#tempoqueriesincorrect
    expr: |
      100 * sum by (cluster, namespace) (rate(test_exporter_test_case_result_total{result="fail"}[5m]))
        /
      sum by (cluster, namespace) (rate(test_exporter_test_case_result_total[5m])) > 1
    for: 15m
    labels:
      severity: warning
  - alert: TempoInconsistentRuntimeConfig
    annotations:
      message: |
        An inconsistent runtime config file is used across cluster {{ $labels.cluster }}/{{ $labels.namespace }}.
      runbook_url: https://grafana.com/docs/tempo/latest/operators-guide/tempo-runbooks/#tempoinconsistentruntimeconfig
    expr: |
      count(count by(cluster, namespace, job, sha256) (cortex_runtime_config_hash)) without(sha256) > 1
    for: 1h
    labels:
      severity: critical
  - alert: TempoBadRuntimeConfig
    annotations:
      message: |
        {{ $labels.job }} failed to reload runtime config.
      runbook_url: https://grafana.com/docs/tempo/latest/operators-guide/tempo-runbooks/#tempobadruntimeconfig
    expr: |
      # The metric value is reset to 0 on error while reloading the config at runtime.
      cortex_runtime_config_last_reload_successful == 0
    for: 5m
    labels:
      severity: critical
  - alert: TempoFrontendQueriesStuck
    annotations:
      message: |
        There are {{ $value }} queued up queries in {{ $labels.cluster }}/{{ $labels.namespace }} {{ $labels.job }}.
      runbook_url: https://grafana.com/docs/tempo/latest/operators-guide/tempo-runbooks/#tempofrontendqueriesstuck
    expr: |
      sum by (cluster, namespace, job) (min_over_time(cortex_query_frontend_queue_length[1m])) > 0
    for: 5m
    labels:
      severity: critical
  - alert: TempoSchedulerQueriesStuck
    annotations:
      message: |
        There are {{ $value }} queued up queries in {{ $labels.cluster }}/{{ $labels.namespace }} {{ $labels.job }}.
      runbook_url: https://grafana.com/docs/tempo/latest/operators-guide/tempo-runbooks/#temposchedulerqueriesstuck
    expr: |
      sum by (cluster, namespace, job) (min_over_time(cortex_query_scheduler_queue_length[1m])) > 0
    for: 7m
    labels:
      severity: critical
  - alert: TempoCacheRequestErrors
    annotations:
      message: |
        The cache {{ $labels.name }} used by Tempo {{ $labels.cluster }}/{{ $labels.namespace }} is experiencing {{ printf "%.2f" $value }}% errors for {{ $labels.operation }} operation.
      runbook_url: https://grafana.com/docs/tempo/latest/operators-guide/tempo-runbooks/#tempocacherequesterrors
    expr: |
      (
        sum by(cluster, namespace, name, operation) (
          rate(thanos_memcached_operation_failures_total[1m])
          or
          rate(thanos_cache_operation_failures_total[1m])
        )
        /
        sum by(cluster, namespace, name, operation) (
          rate(thanos_memcached_operations_total[1m])
          or
          rate(thanos_cache_operations_total[1m])
        )
      ) * 100 > 5
    for: 5m
    labels:
      severity: warning
  - alert: TempoIngesterRestarts
    annotations:
      message: Tempo {{ $labels.pod }} in {{ $labels.cluster }}/{{ $labels.namespace
        }} has restarted {{ printf "%.2f" $value }} times in the last 30 mins.
      runbook_url: https://grafana.com/docs/tempo/latest/operators-guide/tempo-runbooks/#tempoingesterrestarts
    expr: |
      (
        sum by(cluster, namespace, pod) (
          increase(kube_pod_container_status_restarts_total{container=~"(ingester|tempo-write)"}[30m])
        )
        >= 2
      )
      and
      (
        count by(cluster, namespace, pod) (cortex_build_info) > 0
      )
    labels:
      severity: warning
  - alert: TempoKVStoreFailure
    annotations:
      message: |
        Tempo {{ $labels.pod }} in  {{ $labels.cluster }}/{{ $labels.namespace }} is failing to talk to the KV store {{ $labels.kv_name }}.
      runbook_url: https://grafana.com/docs/tempo/latest/operators-guide/tempo-runbooks/#tempokvstorefailure
    expr: |
      (
        sum by(cluster, namespace, pod, status_code, kv_name) (rate(cortex_kv_request_duration_seconds_count{status_code!~"2.+"}[1m]))
        /
        sum by(cluster, namespace, pod, status_code, kv_name) (rate(cortex_kv_request_duration_seconds_count[1m]))
      )
      # We want to get alerted only in case there's a constant failure.
      == 1
    for: 5m
    labels:
      severity: critical
  - alert: TempoMemoryMapAreasTooHigh
    annotations:
      message: '{{ $labels.job }}/{{ $labels.pod }} has a number of mmap-ed areas
        close to the limit.'
      runbook_url: https://grafana.com/docs/tempo/latest/operators-guide/tempo-runbooks/#tempomemorymapareastoohigh
    expr: |
      process_memory_map_areas{job=~".*/(ingester.*|cortex|tempo|tempo-write.*|store-gateway.*|cortex|tempo|tempo-backend.*)"} / process_memory_map_areas_limit{job=~".*/(ingester.*|cortex|tempo|tempo-write.*|store-gateway.*|cortex|tempo|tempo-backend.*)"} > 0.8
    for: 5m
    labels:
      severity: critical
  - alert: TempoIngesterInstanceHasNoTenants
    annotations:
      message: Tempo ingester {{ $labels.pod }} in {{ $labels.cluster }}/{{ $labels.namespace
        }} has no tenants assigned.
      runbook_url: https://grafana.com/docs/tempo/latest/operators-guide/tempo-runbooks/#tempoingesterinstancehasnotenants
    expr: |
      (min by(cluster, namespace, pod) (cortex_ingester_memory_users) == 0)
      and on (cluster, namespace)
      # Only if there are more time-series than would be expected due to continuous testing load
      (
        sum by(cluster, namespace) (cortex_ingester_memory_series)
        /
        max by(cluster, namespace) (cortex_distributor_replication_factor)
      ) > 100000
    for: 1h
    labels:
      severity: warning
  - alert: TempoRulerInstanceHasNoRuleGroups
    annotations:
      message: Tempo ruler {{ $labels.pod }} in {{ $labels.cluster }}/{{ $labels.namespace
        }} has no rule groups assigned.
      runbook_url: https://grafana.com/docs/tempo/latest/operators-guide/tempo-runbooks/#temporulerinstancehasnorulegroups
    expr: |
      # Alert on ruler instances in microservices mode that have no rule groups assigned,
      min by(cluster, namespace, pod) (cortex_ruler_managers_total{pod=~"(.*tempo-)?ruler.*"}) == 0
      # but only if other ruler instances of the same cell do have rule groups assigned
      and on (cluster, namespace)
      (max by(cluster, namespace) (cortex_ruler_managers_total) > 0)
      # and there are more than two instances overall
      and on (cluster, namespace)
      (count by (cluster, namespace) (cortex_ruler_managers_total) > 2)
    for: 1h
    labels:
      severity: warning
  - alert: TempoIngestedDataTooFarInTheFuture
    annotations:
      message: Tempo ingester {{ $labels.pod }} in {{ $labels.cluster }}/{{ $labels.namespace
        }} has ingested samples with timestamps more than 1h in the future.
      runbook_url: https://grafana.com/docs/tempo/latest/operators-guide/tempo-runbooks/#tempoingesteddatatoofarinthefuture
    expr: |
      max by(cluster, namespace, pod) (
          cortex_ingester_tsdb_head_max_timestamp_seconds - time()
          and
          cortex_ingester_tsdb_head_max_timestamp_seconds > 0
      ) > 60*60
    for: 5m
    labels:
      severity: warning
  - alert: TempoStoreGatewayTooManyFailedOperations
    annotations:
      message: Tempo store-gateway {{ $labels.pod }} in {{ $labels.cluster }}/{{ $labels.namespace
        }} is experiencing {{ $value | humanizePercentage }} errors while doing {{
        $labels.operation }} on the object storage.
      runbook_url: https://grafana.com/docs/tempo/latest/operators-guide/tempo-runbooks/#tempostoregatewaytoomanyfailedoperations
    expr: |
      sum by(cluster, namespace, operation) (rate(thanos_objstore_bucket_operation_failures_total{component="store-gateway"}[1m])) > 0
    for: 5m
    labels:
      severity: warning
  - alert: TempoRingMembersMismatch
    annotations:
      message: |
        Number of members in Tempo ingester hash ring does not match the expected number in {{ $labels.cluster }}/{{ $labels.namespace }}.
      runbook_url: https://grafana.com/docs/tempo/latest/operators-guide/tempo-runbooks/#temporingmembersmismatch
    expr: |
      (
        avg by(cluster, namespace) (sum by(cluster, namespace, pod) (cortex_ring_members{name="ingester",job=~".*/(ingester.*|cortex|tempo|tempo-write.*)"}))
        != sum by(cluster, namespace) (up{job=~".*/(ingester.*|cortex|tempo|tempo-write.*)"})
      )
      and
      (
        count by(cluster, namespace) (cortex_build_info) > 0
      )
    for: 15m
    labels:
      component: ingester
      severity: warning
  - alert: "TempoBlockListRisingQuickly"
    expr: |
      avg by (job, instance)(tempodb_blocklist_length) / avg by (job, instance)(tempodb_blocklist_length offset 7d) > 1.4
    for: "15m"
    labels:
      severity: "critical"
    annotations:
      summary: "Tempo block list rising quickly (instance {{ $labels.instance }})"
      description: "The {{ $labels.job }} is experiencing a 40% rise in tempo blocklist length over the last 7 days.  Consider scaling compactors."
  - alert: TempoCompactionsFailing
    expr: sum by (job, instance)(increase(tempodb_compaction_errors_total{}[1h])) > 2 and sum by (job, instance)(increase(tempodb_compaction_errors_total{}[5m])) > 0
    for: 5m
    labels:
      severity: critical
    annotations:
      summary: Tempo compactions failing (instance {{ $labels.instance }})
      description: "The {{ $labels.job }} is experiencing more than 2 compactions failures in the past hour."
  - alert: TempoCompactorUnhealthy
    expr: max by (job, instance)(tempo_ring_members{state="Unhealthy", name="compactor"}) > 0
    for: 15m
    labels:
      severity: critical
    annotations:
      summary: Tempo unhealthy compactor(s) (instance {{ $labels.instance }})
      description: "The {{ $labels.job }} is having {{ printf \"%f\" $value }} unhealthy compactor(s)."
  - alert: TempoCompactorsTooManyOutstandingBlocks
    expr: sum by (tenant) (tempodb_compaction_outstanding_blocks) / ignoring(tenant) group_left count(tempo_build_info) > 100
    for: "6h"
    labels:
      severity: warning
    annotations:
      summary: Tempo too many outstanding compaction blocks (instance {{ $labels.instance }})
      description: "The {{ $labels.job }} is having too many outstanding compaction blocks for tenant {{ $labels.tenant }}, increase compactor's CPU or add more compactors."
  - alert: TempoDiscardedSpans
    expr:  100 * sum by (instance,job)(rate(tempo_discarded_spans_total[5m])) / sum by (instance,job)(rate(tempo_distributor_spans_received_total[5m]))  > 5
    for: "5m"
    labels:
      severity: warning
    annotations:
      summary: Tempo spans insertion failing (instance {{ $labels.instance }})
      description: "The {{ $labels.job }} is experiencing {{ printf \"%.2f\" $value }}% discard of spans."
  - alert: TempoDistributorPushLatency
    expr:  histogram_quantile(0.99, sum by(le, job, instance) (rate(tempo_distributor_push_duration_seconds_bucket[5m]))) > 3
    for: "5m"
    labels:
      severity: warning
    annotations:
      summary: Tempo distributor push latency (instance {{ $labels.instance }})
      description: "The {{ $labels.job }} distributor push is experiencing {{ printf \"%.2f\" $value }}s 99th percentile latency."
  - alert: TempoDistributorUnhealthy
    expr: max by (job, instance)(tempo_ring_members{state="Unhealthy", name="distributor"}) > 0
    for: 15m
    labels:
      severity: critical
    annotations:
      summary: Tempo unhealthy distributor(s) (instance {{ $labels.instance }})
      description: "The {{ $labels.job }} is having {{ printf \"%f\" $value }} unhealthy distributor(s)."
  - alert: TempoFailedIngestingRequests
    expr:  sum by (job,instance)(increase (tempo_ingester_traces_created_total[5m])) / sum by (instance,job)(rate(tempo_request_duration_seconds_count{route='/tempopb.Pusher/PushBytesV2'}[5m])) == 0
    for: "5m"
    labels:
      severity: critical
    annotations:
      summary: Tempo pushing traces to ingester failing (instance {{ $labels.instance }})
      description: "The {{ $labels.job }} is experiencing failure in distributors pushing traces to the ingesters."
  - alert: TempoFrontendClients
    expr:  tempo_query_frontend_connected_clients == 0
    for: "5m"
    labels:
      severity: critical
    annotations:
      summary: Tempo frontend connected clients (instance {{ $labels.instance }})
      description: "The {{ $labels.job }} has no frontend connected clients."
  - alert: TempoFrontendQueueLatency
    expr:  histogram_quantile(0.99, sum by(le,instance,job) (rate(tempo_query_frontend_queue_duration_seconds_bucket[15m]))) > 2
    for: "15m"
    labels:
      severity: warning
    annotations:
      summary: Tempo frontend queue latency (instance {{ $labels.instance }})
      description: "The {{ $labels.job }} frontend queue is experiencing {{ printf \"%.2f\" $value }}s 99th percentile latency."
  - alert: TempoIngesterFlushLatency
    expr:  histogram_quantile(0.99, sum by(le,instance,job) (rate(tempo_ingester_flush_duration_seconds_bucket[5m]))) > 5
    for: "5m"
    labels:
      severity: critical
    annotations:
      summary: Tempo ingester flush latency (instance {{ $labels.instance }})
      description: "The {{ $labels.job }} ingester flush is experiencing {{ printf \"%.2f\" $value }}s 99th percentile latency."
  - alert: TempoIngesterFlushesFailing
    expr: sum by (instance,job)(increase(tempo_ingester_flush_failed_retries_total[1h])) > 2 and sum by(instance,job)(increase(tempo_ingester_flush_failed_retries_total[5m])) > 0
    for: 5m
    labels:
      severity: critical
    annotations:
      summary: Tempo ingester flush retries failing (instance {{ $labels.instance }})
      description: "The {{ $labels.job }} is experiencing more than 2 flush retries failures in the past hour."
  - alert: TempoIngesterFlushesUnhealthy
    expr: sum by (instance,job)(increase(tempo_ingester_failed_flushes_total[1h])) > 2 and sum by (instance,job)(increase(tempo_ingester_failed_flushes_total[5m])) > 0
    for: 5m
    labels:
      severity: warning
    annotations:
      summary: Tempo ingester flush failing (instance {{ $labels.instance }})
      description: "The {{ $labels.job }} is experiencing more than 2 ingester flush failures in the past hour."
  - alert: TempoIngestersUnhealthy
    expr:  max by (instance,job)(tempo_ring_members{state="Unhealthy", name="ingester"}) > 0
    for: "15m"
    labels:
      severity: critical
    annotations:
      summary: Tempo unhealthy ingester(s) (instance {{ $labels.instance }})
      description: "The {{ $labels.job }} is having {{ printf \"%f\" $value }} unhealthy ingester(s)."
  - alert: TempoKVRequestErrors
    expr:  100 * sum(rate(tempo_kv_request_duration_seconds_count{status_code=~"5.."}[5m])) by (route,instance,job) / sum(rate(tempo_kv_request_duration_seconds_count[5m])) by (route,instance,job)  > 10
    for: "15m"
    labels:
      severity: critical
    annotations:
      summary: Tempo kv store request errors (instance {{ $labels.instance }})
      description: "The {{ $labels.job }} {{ $labels.route }} KV store requests is experiencing {{ printf \"%.2f\" $value }}% error rate."
  - alert: TempoTargetMissing
    expr: up == 0
    for: 0m
    labels:
      severity: critical
    annotations:
      summary: Prometheus target missing (instance {{ $labels.instance }})
      description: "A Prometheus target has disappeared. An exporter might be crashed."
  - alert: TempoNoTenantIndexBuilders
    expr: sum by (tenant,job,instance) (tempodb_blocklist_tenant_index_builder) == 0 and  max by (tenant,job,instance)(tempodb_blocklist_length) > 0
    for: 5m
    labels:
      severity: critical
    annotations:
      summary: Tempo tenant index builder failing (instance {{ $labels.instance }})
      description: "The {{ $labels.job }} is having no tenant index builders for tenant {{ $labels.tenant }}. Tenant index will quickly become stale."
  - alert: TempoRequestErrors
    expr: 100 * sum(rate(tempo_request_duration_seconds_count{status_code=~"5.."}[5m])) by (route,job,instance) / sum(rate(tempo_request_duration_seconds_count[5m])) by (route,job,instance)  > 10
    for: "15m"
    labels:
      severity: critical
    annotations:
      summary: Tempo request errors (instance {{ $labels.instance }})
      description: "The {{ $labels.job }} is experiencing {{ printf \"%.2f\" $value }}% request error rate."
  - alert: TempoRequestLatency
    expr: histogram_quantile(0.99, sum by(le, route,job,instance)(rate(tempo_request_duration_seconds_bucket[5m]))) > 5
    for: 5m
    labels:
      severity: critical
    annotations:
      summary: Tempo request latency (instance {{ $labels.instance }})
      description: "The {{ $labels.job }} {{ $labels.route }} is experiencing {{ printf \"%.2f\" $value }}s 99th percentile latency."
  - alert: TempoRetentionsFailing
    expr:  sum by (job,instance)(increase(tempodb_retention_errors_total[1h])) > 2 and sum by (job,instance)(increase(tempodb_retention_errors_total[5m])) > 0
    for: "5m"
    labels:
      severity: critical
    annotations:
      summary: Tempo retentions failing (instance {{ $labels.instance }})
      description: "The {{ $labels.job }} is experiencing more than 2 retention failures in the past hour."
  - alert: TempoTCPConnectionsLimit
    expr:  100 * tempo_tcp_connections / tempo_tcp_connections_limit >= 80 and tempo_tcp_connections_limit > 0
    for: "5m"
    labels:
      severity: warning
    annotations:
      summary: Tempo reaching max number of tcp connections (instance {{ $labels.instance }})
      description: "The {{ $labels.job }} is reaching {{ printf \"%.2f\" $value }}% of max tcp {{ $labels.protocol }} connections."
  - alert: TempoTenantIndexTooOld
    expr: max by(tenant,instance,job) (tempodb_blocklist_tenant_index_age_seconds) > 600
    for: 5m
    labels:
      severity: critical
    annotations:
      summary: Tempo tenant old index (instance {{ $labels.instance }})
      description: "The {{ $labels.job }} is experiencing a tenant {{ $labels.tenant }} with a too old index age of 600 seconds."
  - alert: TempoUserConfigurableOverridesReloadFailing
    expr: sum by (instance,job)(increase(tempo_overrides_user_configurable_overrides_reload_failed_total[1h])) > 5 and sum by (instance,job)(increase(tempo_overrides_user_configurable_overrides_reload_failed_total{}[5m])) > 0
    labels:
      severity: critical
    annotations:
      summary: Tempo user config override reload failing (instance {{ $labels.instance }})
      description: "The {{ $labels.job }} is experiencing more than 5 user-configurable override reload failures in the past hour."
- name: tempo_instance_limits_alerts
  rules:
  - alert: TempoIngesterReachingSeriesLimit
    annotations:
      message: |
        Ingester {{ $labels.job }}/{{ $labels.pod }} has reached {{ $value | humanizePercentage }} of its series limit.
      runbook_url: https://grafana.com/docs/tempo/latest/operators-guide/tempo-runbooks/#tempoingesterreachingserieslimit
    expr: |
      (
          (cortex_ingester_memory_series / ignoring(limit) cortex_ingester_instance_limits{limit="max_series"})
          and ignoring (limit)
          (cortex_ingester_instance_limits{limit="max_series"} > 0)
      ) > 0.8
    for: 3h
    labels:
      severity: warning
  - alert: TempoIngesterReachingSeriesLimit
    annotations:
      message: |
        Ingester {{ $labels.job }}/{{ $labels.pod }} has reached {{ $value | humanizePercentage }} of its series limit.
      runbook_url: https://grafana.com/docs/tempo/latest/operators-guide/tempo-runbooks/#tempoingesterreachingserieslimit
    expr: |
      (
          (cortex_ingester_memory_series / ignoring(limit) cortex_ingester_instance_limits{limit="max_series"})
          and ignoring (limit)
          (cortex_ingester_instance_limits{limit="max_series"} > 0)
      ) > 0.9
    for: 5m
    labels:
      severity: critical
  - alert: TempoIngesterReachingTenantsLimit
    annotations:
      message: |
        Ingester {{ $labels.job }}/{{ $labels.pod }} has reached {{ $value | humanizePercentage }} of its tenant limit.
      runbook_url: https://grafana.com/docs/tempo/latest/operators-guide/tempo-runbooks/#tempoingesterreachingtenantslimit
    expr: |
      (
          (cortex_ingester_memory_users / ignoring(limit) cortex_ingester_instance_limits{limit="max_tenants"})
          and ignoring (limit)
          (cortex_ingester_instance_limits{limit="max_tenants"} > 0)
      ) > 0.7
    for: 5m
    labels:
      severity: warning
  - alert: TempoIngesterReachingTenantsLimit
    annotations:
      message: |
        Ingester {{ $labels.job }}/{{ $labels.pod }} has reached {{ $value | humanizePercentage }} of its tenant limit.
      runbook_url: https://grafana.com/docs/tempo/latest/operators-guide/tempo-runbooks/#tempoingesterreachingtenantslimit
    expr: |
      (
          (cortex_ingester_memory_users / ignoring(limit) cortex_ingester_instance_limits{limit="max_tenants"})
          and ignoring (limit)
          (cortex_ingester_instance_limits{limit="max_tenants"} > 0)
      ) > 0.8
    for: 5m
    labels:
      severity: critical
  - alert: TempoReachingTCPConnectionsLimit
    annotations:
      message: |
        Tempo instance {{ $labels.job }}/{{ $labels.pod }} has reached {{ $value | humanizePercentage }} of its TCP connections limit for {{ $labels.protocol }} protocol.
      runbook_url: https://grafana.com/docs/tempo/latest/operators-guide/tempo-runbooks/#temporeachingtcpconnectionslimit
    expr: |
      cortex_tcp_connections / cortex_tcp_connections_limit > 0.8 and
      cortex_tcp_connections_limit > 0
    for: 5m
    labels:
      severity: critical
  - alert: TempoDistributorReachingInflightPushRequestLimit
    annotations:
      message: |
        Distributor {{ $labels.job }}/{{ $labels.pod }} has reached {{ $value | humanizePercentage }} of its inflight push request limit.
      runbook_url: https://grafana.com/docs/tempo/latest/operators-guide/tempo-runbooks/#tempodistributorreachinginflightpushrequestlimit
    expr: |
      (
          (cortex_distributor_inflight_push_requests / ignoring(limit) cortex_distributor_instance_limits{limit="max_inflight_push_requests"})
          and ignoring (limit)
          (cortex_distributor_instance_limits{limit="max_inflight_push_requests"} > 0)
      ) > 0.8
    for: 5m
    labels:
      severity: critical
- name: tempo-rollout-alerts
  rules:
  - alert: TempoRolloutStuck
    annotations:
      message: |
        The {{ $labels.rollout_group }} rollout is stuck in {{ $labels.cluster }}/{{ $labels.namespace }}.
      runbook_url: https://grafana.com/docs/tempo/latest/operators-guide/tempo-runbooks/#temporolloutstuck
    expr: |
      (
        max without (revision) (
          sum without(statefulset) (label_replace(kube_statefulset_status_current_revision, "rollout_group", "$1", "statefulset", "(.*?)(?:-zone-[a-z])?"))
            unless
          sum without(statefulset) (label_replace(kube_statefulset_status_update_revision, "rollout_group", "$1", "statefulset", "(.*?)(?:-zone-[a-z])?"))
        )
          *
        (
          sum without(statefulset) (label_replace(kube_statefulset_replicas, "rollout_group", "$1", "statefulset", "(.*?)(?:-zone-[a-z])?"))
            !=
          sum without(statefulset) (label_replace(kube_statefulset_status_replicas_updated, "rollout_group", "$1", "statefulset", "(.*?)(?:-zone-[a-z])?"))
        )
      ) and (
        changes(sum without(statefulset) (label_replace(kube_statefulset_status_replicas_updated, "rollout_group", "$1", "statefulset", "(.*?)(?:-zone-[a-z])?"))[15m:1m])
          ==
        0
      )
      * on(cluster, namespace) group_left max by(cluster, namespace) (cortex_build_info)
    for: 30m
    labels:
      severity: warning
      workload_type: statefulset
  - alert: TempoRolloutStuck
    annotations:
      message: |
        The {{ $labels.rollout_group }} rollout is stuck in {{ $labels.cluster }}/{{ $labels.namespace }}.
      runbook_url: https://grafana.com/docs/tempo/latest/operators-guide/tempo-runbooks/#temporolloutstuck
    expr: |
      (
        sum without(deployment) (label_replace(kube_deployment_spec_replicas, "rollout_group", "$1", "deployment", "(.*?)(?:-zone-[a-z])?"))
          !=
        sum without(deployment) (label_replace(kube_deployment_status_replicas_updated, "rollout_group", "$1", "deployment", "(.*?)(?:-zone-[a-z])?"))
      ) and (
        changes(sum without(deployment) (label_replace(kube_deployment_status_replicas_updated, "rollout_group", "$1", "deployment", "(.*?)(?:-zone-[a-z])?"))[15m:1m])
          ==
        0
      )
      * on(cluster, namespace) group_left max by(cluster, namespace) (cortex_build_info)
    for: 30m
    labels:
      severity: warning
      workload_type: deployment
  - alert: RolloutOperatorNotReconciling
    annotations:
      message: |
        Rollout operator is not reconciling the rollout group {{ $labels.rollout_group }} in {{ $labels.cluster }}/{{ $labels.namespace }}.
      runbook_url: https://grafana.com/docs/tempo/latest/operators-guide/tempo-runbooks/#rolloutoperatornotreconciling
    expr: |
      max by(cluster, namespace, rollout_group) (time() - rollout_operator_last_successful_group_reconcile_timestamp_seconds) > 600
    for: 5m
    labels:
      severity: critical
- name: tempo-provisioning
  rules:
  - alert: TempoAllocatingTooMuchMemory
    annotations:
      message: |
        Instance {{ $labels.pod }} in {{ $labels.cluster }}/{{ $labels.namespace }} is using too much memory.
      runbook_url: https://grafana.com/docs/tempo/latest/operators-guide/tempo-runbooks/#tempoallocatingtoomuchmemory
    expr: |
      (
        # We use RSS instead of working set memory because of the ingester's extensive usage of mmap.
        # See: https://github.com/grafana/tempo/issues/2466
        container_memory_rss{container=~"(ingester|tempo-write|tempo-backend)"}
          /
        ( container_spec_memory_limit_bytes{container=~"(ingester|tempo-write|tempo-backend)"} > 0 )
      )
      # Match only Tempo namespaces.
      * on(cluster, namespace) group_left max by(cluster, namespace) (cortex_build_info)
      > 0.65
    for: 15m
    labels:
      severity: warning
  - alert: TempoAllocatingTooMuchMemory
    annotations:
      message: |
        Instance {{ $labels.pod }} in {{ $labels.cluster }}/{{ $labels.namespace }} is using too much memory.
      runbook_url: https://grafana.com/docs/tempo/latest/operators-guide/tempo-runbooks/#tempoallocatingtoomuchmemory
    expr: |
      (
        # We use RSS instead of working set memory because of the ingester's extensive usage of mmap.
        # See: https://github.com/grafana/tempo/issues/2466
        container_memory_rss{container=~"(ingester|tempo-write|tempo-backend)"}
          /
        ( container_spec_memory_limit_bytes{container=~"(ingester|tempo-write|tempo-backend)"} > 0 )
      )
      # Match only Tempo namespaces.
      * on(cluster, namespace) group_left max by(cluster, namespace) (cortex_build_info)
      > 0.8
    for: 15m
    labels:
      severity: critical
- name: ruler_alerts
  rules:
  - alert: TempoRulerTooManyFailedPushes
    annotations:
      message: |
        Tempo Ruler {{ $labels.pod }} in {{ $labels.cluster }}/{{ $labels.namespace }} is experiencing {{ printf "%.2f" $value }}% write (push) errors.
      runbook_url: https://grafana.com/docs/tempo/latest/operators-guide/tempo-runbooks/#temporulertoomanyfailedpushes
    expr: |
      100 * (
      sum by (cluster, namespace, pod) (rate(cortex_ruler_write_requests_failed_total[1m]))
        /
      sum by (cluster, namespace, pod) (rate(cortex_ruler_write_requests_total[1m]))
      ) > 1
    for: 5m
    labels:
      severity: critical
  - alert: TempoRulerTooManyFailedQueries
    annotations:
      message: |
        Tempo Ruler {{ $labels.pod }} in {{ $labels.cluster }}/{{ $labels.namespace }} is experiencing {{ printf "%.2f" $value }}% errors while evaluating rules.
      runbook_url: https://grafana.com/docs/tempo/latest/operators-guide/tempo-runbooks/#temporulertoomanyfailedqueries
    expr: |
      100 * (
      sum by (cluster, namespace, pod) (rate(cortex_ruler_queries_failed_total[1m]))
        /
      sum by (cluster, namespace, pod) (rate(cortex_ruler_queries_total[1m]))
      ) > 1
    for: 5m
    labels:
      severity: critical
  - alert: TempoRulerMissedEvaluations
    annotations:
      message: |
        Tempo Ruler {{ $labels.pod }} in {{ $labels.cluster }}/{{ $labels.namespace }} is experiencing {{ printf "%.2f" $value }}% missed iterations for the rule group {{ $labels.rule_group }}.
      runbook_url: https://grafana.com/docs/tempo/latest/operators-guide/tempo-runbooks/#temporulermissedevaluations
    expr: |
      100 * (
      sum by (cluster, namespace, pod, rule_group) (rate(cortex_prometheus_rule_group_iterations_missed_total[1m]))
        /
      sum by (cluster, namespace, pod, rule_group) (rate(cortex_prometheus_rule_group_iterations_total[1m]))
      ) > 1
    for: 5m
    labels:
      severity: warning
  - alert: TempoRulerFailedRingCheck
    annotations:
      message: |
        Tempo Rulers in {{ $labels.cluster }}/{{ $labels.namespace }} are experiencing errors when checking the ring for rule group ownership.
      runbook_url: https://grafana.com/docs/tempo/latest/operators-guide/tempo-runbooks/#temporulerfailedringcheck
    expr: |
      sum by (cluster, namespace, job) (rate(cortex_ruler_ring_check_errors_total[1m]))
         > 0
    for: 5m
    labels:
      severity: critical
  - alert: TempoRulerRemoteEvaluationFailing
    annotations:
      message: |
        Tempo rulers in {{ $labels.cluster }}/{{ $labels.namespace }} are failing to perform {{ printf "%.2f" $value }}% of remote evaluations through the ruler-query-frontend.
      runbook_url: https://grafana.com/docs/tempo/latest/operators-guide/tempo-runbooks/#temporulerremoteevaluationfailing
    expr: |
      100 * (
      sum by (cluster, namespace) (rate(cortex_request_duration_seconds_count{route="/httpgrpc.HTTP/Handle", status_code=~"5..", job=~".*/(ruler-query-frontend.*)"}[5m]))
        /
      sum by (cluster, namespace) (rate(cortex_request_duration_seconds_count{route="/httpgrpc.HTTP/Handle", job=~".*/(ruler-query-frontend.*)"}[5m]))
      ) > 1
    for: 5m
    labels:
      severity: warning
- name: gossip_alerts
  rules:
  - alert: TempoGossipMembersTooHigh
    annotations:
      message: One or more Tempo instances in {{ $labels.cluster }}/{{ $labels.namespace
        }} consistently sees a higher than expected number of gossip members.
      runbook_url: https://grafana.com/docs/tempo/latest/operators-guide/tempo-runbooks/#tempogossipmemberstoohigh
    expr: |
      max by (cluster, namespace) (memberlist_client_cluster_members_count)
      >
      (sum by (cluster, namespace) (up{job=~".+/(admin-api|alertmanager|compactor.*|distributor.*|ingester.*|querier.*|ruler|ruler-querier.*|store-gateway.*|cortex|tempo|tempo-write.*|tempo-read.*|tempo-backend.*)"}) + 10)
    for: 20m
    labels:
      severity: warning
  - alert: TempoGossipMembersTooLow
    annotations:
      message: One or more Tempo instances in {{ $labels.cluster }}/{{ $labels.namespace
        }} consistently sees a lower than expected number of gossip members.
      runbook_url: https://grafana.com/docs/tempo/latest/operators-guide/tempo-runbooks/#tempogossipmemberstoolow
    expr: |
      min by (cluster, namespace) (memberlist_client_cluster_members_count)
      <
      (sum by (cluster, namespace) (up{job=~".+/(admin-api|alertmanager|compactor.*|distributor.*|ingester.*|querier.*|ruler|ruler-querier.*|store-gateway.*|cortex|tempo|tempo-write.*|tempo-read.*|tempo-backend.*)"}) * 0.5)
    for: 20m
    labels:
      severity: warning
- name: etcd_alerts
  rules:
  - alert: EtcdAllocatingTooMuchMemory
    annotations:
      message: |
        Too much memory being used by {{ $labels.namespace }}/{{ $labels.pod }} - bump memory limit.
      runbook_url: https://grafana.com/docs/tempo/latest/operators-guide/tempo-runbooks/#etcdallocatingtoomuchmemory
    expr: |
      (
        container_memory_working_set_bytes{container="etcd"}
          /
        ( container_spec_memory_limit_bytes{container="etcd"} > 0 )
      ) > 0.65
    for: 15m
    labels:
      severity: warning
  - alert: EtcdAllocatingTooMuchMemory
    annotations:
      message: |
        Too much memory being used by {{ $labels.namespace }}/{{ $labels.pod }} - bump memory limit.
      runbook_url: https://grafana.com/docs/tempo/latest/operators-guide/tempo-runbooks/#etcdallocatingtoomuchmemory
    expr: |
      (
        container_memory_working_set_bytes{container="etcd"}
          /
        ( container_spec_memory_limit_bytes{container="etcd"} > 0 )
      ) > 0.8
    for: 15m
    labels:
      severity: critical
- name: alertmanager_alerts
  rules:
  - alert: TempoAlertmanagerSyncConfigsFailing
    annotations:
      message: |
        Tempo Alertmanager {{ $labels.job }}/{{ $labels.pod }} is failing to read tenant configurations from storage.
      runbook_url: https://grafana.com/docs/tempo/latest/operators-guide/tempo-runbooks/#tempoalertmanagersyncconfigsfailing
    expr: |
      rate(cortex_alertmanager_sync_configs_failed_total[5m]) > 0
    for: 30m
    labels:
      severity: critical
  - alert: TempoAlertmanagerRingCheckFailing
    annotations:
      message: |
        Tempo Alertmanager {{ $labels.job }}/{{ $labels.pod }} is unable to check tenants ownership via the ring.
      runbook_url: https://grafana.com/docs/tempo/latest/operators-guide/tempo-runbooks/#tempoalertmanagerringcheckfailing
    expr: |
      rate(cortex_alertmanager_ring_check_errors_total[2m]) > 0
    for: 10m
    labels:
      severity: critical
  - alert: TempoAlertmanagerPartialStateMergeFailing
    annotations:
      message: |
        Tempo Alertmanager {{ $labels.job }}/{{ $labels.pod }} is failing to merge partial state changes received from a replica.
      runbook_url: https://grafana.com/docs/tempo/latest/operators-guide/tempo-runbooks/#tempoalertmanagerpartialstatemergefailing
    expr: |
      rate(cortex_alertmanager_partial_state_merges_failed_total[2m]) > 0
    for: 10m
    labels:
      severity: critical
  - alert: TempoAlertmanagerReplicationFailing
    annotations:
      message: |
        Tempo Alertmanager {{ $labels.job }}/{{ $labels.pod }} is failing to replicating partial state to its replicas.
      runbook_url: https://grafana.com/docs/tempo/latest/operators-guide/tempo-runbooks/#tempoalertmanagerreplicationfailing
    expr: |
      rate(cortex_alertmanager_state_replication_failed_total[2m]) > 0
    for: 10m
    labels:
      severity: critical
  - alert: TempoAlertmanagerPersistStateFailing
    annotations:
      message: |
        Tempo Alertmanager {{ $labels.job }}/{{ $labels.pod }} is unable to persist full state snapshots to remote storage.
      runbook_url: https://grafana.com/docs/tempo/latest/operators-guide/tempo-runbooks/#tempoalertmanagerpersiststatefailing
    expr: |
      rate(cortex_alertmanager_state_persist_failed_total[15m]) > 0
    for: 1h
    labels:
      severity: critical
  - alert: TempoAlertmanagerInitialSyncFailed
    annotations:
      message: |
        Tempo Alertmanager {{ $labels.job }}/{{ $labels.pod }} was unable to obtain some initial state when starting up.
      runbook_url: https://grafana.com/docs/tempo/latest/operators-guide/tempo-runbooks/#tempoalertmanagerinitialsyncfailed
    expr: |
      increase(cortex_alertmanager_state_initial_sync_completed_total{outcome="failed"}[1m]) > 0
    labels:
      severity: critical
  - alert: TempoAlertmanagerAllocatingTooMuchMemory
    annotations:
      message: |
        Alertmanager {{ $labels.pod }} in {{ $labels.cluster }}/{{ $labels.namespace }} is using too much memory.
      runbook_url: https://grafana.com/docs/tempo/latest/operators-guide/tempo-runbooks/#tempoalertmanagerallocatingtoomuchmemory
    expr: |
      (container_memory_working_set_bytes{container="alertmanager"} / container_spec_memory_limit_bytes{container="alertmanager"}) > 0.80
      and
      (container_spec_memory_limit_bytes{container="alertmanager"} > 0)
    for: 15m
    labels:
      severity: warning
  - alert: TempoAlertmanagerAllocatingTooMuchMemory
    annotations:
      message: |
        Alertmanager {{ $labels.pod }} in {{ $labels.cluster }}/{{ $labels.namespace }} is using too much memory.
      runbook_url: https://grafana.com/docs/tempo/latest/operators-guide/tempo-runbooks/#tempoalertmanagerallocatingtoomuchmemory
    expr: |
      (container_memory_working_set_bytes{container="alertmanager"} / container_spec_memory_limit_bytes{container="alertmanager"}) > 0.90
      and
      (container_spec_memory_limit_bytes{container="alertmanager"} > 0)
    for: 15m
    labels:
      severity: critical
  - alert: TempoAlertmanagerInstanceHasNoTenants
    annotations:
      message: Tempo alertmanager {{ $labels.pod }} in {{ $labels.cluster }}/{{ $labels.namespace
        }} owns no tenants.
      runbook_url: https://grafana.com/docs/tempo/latest/operators-guide/tempo-runbooks/#tempoalertmanagerinstancehasnotenants
    expr: |
      # Alert on alertmanager instances in microservices mode that own no tenants,
      min by(cluster, namespace, pod) (cortex_alertmanager_tenants_owned{pod=~"(.*tempo-)?alertmanager.*"}) == 0
      # but only if other instances of the same cell do have tenants assigned.
      and on (cluster, namespace)
      max by(cluster, namespace) (cortex_alertmanager_tenants_owned) > 0
    for: 1h
    labels:
      severity: warning
- name: tempo_blocks_alerts
  rules:
  - alert: TempoIngesterHasNotShippedBlocks
    annotations:
      message: Tempo Ingester {{ $labels.pod }} in {{ $labels.cluster }}/{{ $labels.namespace
        }} has not shipped any block in the last 4 hours.
      runbook_url: https://grafana.com/docs/tempo/latest/operators-guide/tempo-runbooks/#tempoingesterhasnotshippedblocks
    expr: |
      (min by(cluster, namespace, pod) (time() - cortex_ingester_shipper_last_successful_upload_timestamp_seconds) > 60 * 60 * 4)
      and
      (max by(cluster, namespace, pod) (cortex_ingester_shipper_last_successful_upload_timestamp_seconds) > 0)
      and
      # Only if the ingester has ingested samples over the last 4h.
      (max by(cluster, namespace, pod) (max_over_time(cluster_namespace_pod:cortex_ingester_ingested_samples_total:rate1m[4h])) > 0)
      and
      # Only if the ingester was ingesting samples 4h ago. This protects against the case where the ingester replica
      # had ingested samples in the past, then no traffic was received for a long period and then it starts
      # receiving samples again. Without this check, the alert would fire as soon as it gets back receiving
      # samples, while the a block shipping is expected within the next 4h.
      (max by(cluster, namespace, pod) (max_over_time(cluster_namespace_pod:cortex_ingester_ingested_samples_total:rate1m[1h] offset 4h)) > 0)
    for: 15m
    labels:
      severity: critical
  - alert: TempoIngesterHasNotShippedBlocksSinceStart
    annotations:
      message: Tempo Ingester {{ $labels.pod }} in {{ $labels.cluster }}/{{ $labels.namespace
        }} has not shipped any block in the last 4 hours.
      runbook_url: https://grafana.com/docs/tempo/latest/operators-guide/tempo-runbooks/#tempoingesterhasnotshippedblockssincestart
    expr: |
      (max by(cluster, namespace, pod) (cortex_ingester_shipper_last_successful_upload_timestamp_seconds) == 0)
      and
      (max by(cluster, namespace, pod) (max_over_time(cluster_namespace_pod:cortex_ingester_ingested_samples_total:rate1m[4h])) > 0)
    for: 4h
    labels:
      severity: critical
  - alert: TempoIngesterHasUnshippedBlocks
    annotations:
      message: Tempo Ingester {{ $labels.pod }} in {{ $labels.cluster }}/{{ $labels.namespace
        }} has compacted a block {{ $value | humanizeDuration }} ago but it hasn't
        been successfully uploaded to the storage yet.
      runbook_url: https://grafana.com/docs/tempo/latest/operators-guide/tempo-runbooks/#tempoingesterhasunshippedblocks
    expr: |
      (time() - cortex_ingester_oldest_unshipped_block_timestamp_seconds > 3600)
      and
      (cortex_ingester_oldest_unshipped_block_timestamp_seconds > 0)
    for: 15m
    labels:
      severity: critical
  - alert: TempoIngesterTSDBHeadCompactionFailed
    annotations:
      message: Tempo Ingester {{ $labels.pod }} in {{ $labels.cluster }}/{{ $labels.namespace
        }} is failing to compact TSDB head.
      runbook_url: https://grafana.com/docs/tempo/latest/operators-guide/tempo-runbooks/#tempoingestertsdbheadcompactionfailed
    expr: |
      rate(cortex_ingester_tsdb_compactions_failed_total[5m]) > 0
    for: 15m
    labels:
      severity: critical
  - alert: TempoIngesterTSDBHeadTruncationFailed
    annotations:
      message: Tempo Ingester {{ $labels.pod }} in {{ $labels.cluster }}/{{ $labels.namespace
        }} is failing to truncate TSDB head.
      runbook_url: https://grafana.com/docs/tempo/latest/operators-guide/tempo-runbooks/#tempoingestertsdbheadtruncationfailed
    expr: |
      rate(cortex_ingester_tsdb_head_truncations_failed_total[5m]) > 0
    labels:
      severity: critical
  - alert: TempoIngesterTSDBCheckpointCreationFailed
    annotations:
      message: Tempo Ingester {{ $labels.pod }} in {{ $labels.cluster }}/{{ $labels.namespace
        }} is failing to create TSDB checkpoint.
      runbook_url: https://grafana.com/docs/tempo/latest/operators-guide/tempo-runbooks/#tempoingestertsdbcheckpointcreationfailed
    expr: |
      rate(cortex_ingester_tsdb_checkpoint_creations_failed_total[5m]) > 0
    labels:
      severity: critical
  - alert: TempoIngesterTSDBCheckpointDeletionFailed
    annotations:
      message: Tempo Ingester {{ $labels.pod }} in {{ $labels.cluster }}/{{ $labels.namespace
        }} is failing to delete TSDB checkpoint.
      runbook_url: https://grafana.com/docs/tempo/latest/operators-guide/tempo-runbooks/#tempoingestertsdbcheckpointdeletionfailed
    expr: |
      rate(cortex_ingester_tsdb_checkpoint_deletions_failed_total[5m]) > 0
    labels:
      severity: critical
  - alert: TempoIngesterTSDBWALTruncationFailed
    annotations:
      message: Tempo Ingester {{ $labels.pod }} in {{ $labels.cluster }}/{{ $labels.namespace
        }} is failing to truncate TSDB WAL.
      runbook_url: https://grafana.com/docs/tempo/latest/operators-guide/tempo-runbooks/#tempoingestertsdbwaltruncationfailed
    expr: |
      rate(cortex_ingester_tsdb_wal_truncations_failed_total[5m]) > 0
    labels:
      severity: warning
  - alert: TempoIngesterTSDBWALCorrupted
    annotations:
      message: Tempo Ingester {{ $labels.pod }} in {{ $labels.cluster }}/{{ $labels.namespace
        }} got a corrupted TSDB WAL.
      runbook_url: https://grafana.com/docs/tempo/latest/operators-guide/tempo-runbooks/#tempoingestertsdbwalcorrupted
    expr: |
      # alert when there are more than one corruptions
      count by (cluster, namespace) (rate(cortex_ingester_tsdb_wal_corruptions_total[5m]) > 0) > 1
      and
      # and there is only one zone
      count by (cluster, namespace) (group by (cluster, namespace, job) (cortex_ingester_tsdb_wal_corruptions_total)) == 1
    labels:
      deployment: single-zone
      severity: critical
  - alert: TempoIngesterTSDBWALCorrupted
    annotations:
      message: Tempo Ingester {{ $labels.pod }} in {{ $labels.cluster }}/{{ $labels.namespace
        }} got a corrupted TSDB WAL.
      runbook_url: https://grafana.com/docs/tempo/latest/operators-guide/tempo-runbooks/#tempoingestertsdbwalcorrupted
    expr: |
      # alert when there are more than one corruptions
      count by (cluster, namespace) (sum by (cluster, namespace, job) (rate(cortex_ingester_tsdb_wal_corruptions_total[5m]) > 0)) > 1
      and
      # and there are multiple zones
      count by (cluster, namespace) (group by (cluster, namespace, job) (cortex_ingester_tsdb_wal_corruptions_total)) > 1
    labels:
      deployment: multi-zone
      severity: critical
  - alert: TempoIngesterTSDBWALWritesFailed
    annotations:
      message: Tempo Ingester {{ $labels.pod }} in {{ $labels.cluster }}/{{ $labels.namespace
        }} is failing to write to TSDB WAL.
      runbook_url: https://grafana.com/docs/tempo/latest/operators-guide/tempo-runbooks/#tempoingestertsdbwalwritesfailed
    expr: |
      rate(cortex_ingester_tsdb_wal_writes_failed_total[1m]) > 0
    for: 3m
    labels:
      severity: critical
  - alert: TempoStoreGatewayHasNotSyncTheBucket
    annotations:
      message: Tempo store-gateway {{ $labels.pod }} in {{ $labels.cluster }}/{{ $labels.namespace
        }} has not successfully synched the bucket since {{ $value | humanizeDuration
        }}.
      runbook_url: https://grafana.com/docs/tempo/latest/operators-guide/tempo-runbooks/#tempostoregatewayhasnotsyncthebucket
    expr: |
      (time() - cortex_bucket_stores_blocks_last_successful_sync_timestamp_seconds{component="store-gateway"} > 60 * 30)
      and
      cortex_bucket_stores_blocks_last_successful_sync_timestamp_seconds{component="store-gateway"} > 0
    for: 5m
    labels:
      severity: critical
  - alert: TempoStoreGatewayNoSyncedTenants
    annotations:
      message: Tempo store-gateway {{ $labels.pod }} in {{ $labels.cluster }}/{{ $labels.namespace
        }} is not syncing any blocks for any tenant.
      runbook_url: https://grafana.com/docs/tempo/latest/operators-guide/tempo-runbooks/#tempostoregatewaynosyncedtenants
    expr: |
      min by(cluster, namespace, pod) (cortex_bucket_stores_tenants_synced{component="store-gateway"}) == 0
    for: 1h
    labels:
      severity: warning
  - alert: TempoBucketIndexNotUpdated
    annotations:
      message: Tempo bucket index for tenant {{ $labels.user }} in {{ $labels.cluster
        }}/{{ $labels.namespace }} has not been updated since {{ $value | humanizeDuration
        }}.
      runbook_url: https://grafana.com/docs/tempo/latest/operators-guide/tempo-runbooks/#tempobucketindexnotupdated
    expr: |
      min by(cluster, namespace, user) (time() - cortex_bucket_index_last_successful_update_timestamp_seconds) > 7200
    labels:
      severity: critical
- name: tempo_compactor_alerts
  rules:
  - alert: TempoCompactorHasNotSuccessfullyCleanedUpBlocks
    annotations:
      message: Tempo Compactor {{ $labels.pod }} in {{ $labels.cluster }}/{{ $labels.namespace
        }} has not successfully cleaned up blocks in the last 6 hours.
      runbook_url: https://grafana.com/docs/tempo/latest/operators-guide/tempo-runbooks/#tempocompactorhasnotsuccessfullycleanedupblocks
    expr: |
      # The "last successful run" metric is updated even if the compactor owns no tenants,
      # so this alert correctly doesn't fire if compactor has nothing to do.
      (time() - cortex_compactor_block_cleanup_last_successful_run_timestamp_seconds > 60 * 60 * 6)
    for: 1h
    labels:
      severity: critical
  - alert: TempoCompactorHasNotSuccessfullyRunCompaction
    annotations:
      message: Tempo Compactor {{ $labels.pod }} in {{ $labels.cluster }}/{{ $labels.namespace
        }} has not run compaction in the last 24 hours.
      runbook_url: https://grafana.com/docs/tempo/latest/operators-guide/tempo-runbooks/#tempocompactorhasnotsuccessfullyruncompaction
    expr: |
      # The "last successful run" metric is updated even if the compactor owns no tenants,
      # so this alert correctly doesn't fire if compactor has nothing to do.
      (time() - cortex_compactor_last_successful_run_timestamp_seconds > 60 * 60 * 24)
      and
      (cortex_compactor_last_successful_run_timestamp_seconds > 0)
    for: 1h
    labels:
      reason: in-last-24h
      severity: critical
  - alert: TempoCompactorHasNotSuccessfullyRunCompaction
    annotations:
      message: Tempo Compactor {{ $labels.pod }} in {{ $labels.cluster }}/{{ $labels.namespace
        }} has not run compaction in the last 24 hours.
      runbook_url: https://grafana.com/docs/tempo/latest/operators-guide/tempo-runbooks/#tempocompactorhasnotsuccessfullyruncompaction
    expr: |
      # The "last successful run" metric is updated even if the compactor owns no tenants,
      # so this alert correctly doesn't fire if compactor has nothing to do.
      cortex_compactor_last_successful_run_timestamp_seconds == 0
    for: 24h
    labels:
      reason: since-startup
      severity: critical
  - alert: TempoCompactorHasNotSuccessfullyRunCompaction
    annotations:
      message: Tempo Compactor {{ $labels.pod }} in {{ $labels.cluster }}/{{ $labels.namespace
        }} failed to run 2 consecutive compactions.
      runbook_url: https://grafana.com/docs/tempo/latest/operators-guide/tempo-runbooks/#tempocompactorhasnotsuccessfullyruncompaction
    expr: |
      increase(cortex_compactor_runs_failed_total{reason!="shutdown"}[2h]) >= 2
    labels:
      reason: consecutive-failures
      severity: critical
  - alert: TempoCompactorHasNotUploadedBlocks
    annotations:
      message: Tempo Compactor {{ $labels.pod }} in {{ $labels.cluster }}/{{ $labels.namespace
        }} has not uploaded any block in the last 24 hours.
      runbook_url: https://grafana.com/docs/tempo/latest/operators-guide/tempo-runbooks/#tempocompactorhasnotuploadedblocks
    expr: |
      (time() - (max by(cluster, namespace, pod) (thanos_objstore_bucket_last_successful_upload_time{component="compactor"})) > 60 * 60 * 24)
      and
      (max by(cluster, namespace, pod) (thanos_objstore_bucket_last_successful_upload_time{component="compactor"}) > 0)
      and
      # Only if some compactions have started. We don't want to fire this alert if the compactor has nothing to do
      # (e.g. there are more replicas than required because running as part of tempo-backend).
      (sum by(cluster, namespace, pod) (rate(cortex_compactor_group_compaction_runs_started_total[24h])) > 0)
    for: 15m
    labels:
      severity: critical
      time_period: 24h
  - alert: TempoCompactorHasNotUploadedBlocks
    annotations:
      message: Tempo Compactor {{ $labels.pod }} in {{ $labels.cluster }}/{{ $labels.namespace
        }} has not uploaded any block since its start.
      runbook_url: https://grafana.com/docs/tempo/latest/operators-guide/tempo-runbooks/#tempocompactorhasnotuploadedblocks
    expr: |
      (max by(cluster, namespace, pod) (thanos_objstore_bucket_last_successful_upload_time{component="compactor"}) == 0)
      and
      # Only if some compactions have started. We don't want to fire this alert if the compactor has nothing to do
      # (e.g. there are more replicas than required because running as part of tempo-backend).
      (sum by(cluster, namespace, pod) (rate(cortex_compactor_group_compaction_runs_started_total[24h])) > 0)
    for: 24h
    labels:
      severity: critical
      time_period: since-start
  - alert: TempoCompactorSkippedUnhealthyBlocks
    annotations:
      message: Tempo Compactor {{ $labels.pod }} in {{ $labels.cluster }}/{{ $labels.namespace
        }} has found and ignored unhealthy blocks.
      runbook_url: https://grafana.com/docs/tempo/latest/operators-guide/tempo-runbooks/#tempocompactorskippedunhealthyblocks
    expr: |
      increase(cortex_compactor_blocks_marked_for_no_compaction_total[5m]) > 0
    for: 1m
    labels:
      severity: warning
  - alert: TempoCompactorSkippedUnhealthyBlocks
    annotations:
      message: Tempo Compactor {{ $labels.pod }} in {{ $labels.cluster }}/{{ $labels.namespace
        }} has found and ignored unhealthy blocks.
      runbook_url: https://grafana.com/docs/tempo/latest/operators-guide/tempo-runbooks/#tempocompactorskippedunhealthyblocks
    expr: |
      increase(cortex_compactor_blocks_marked_for_no_compaction_total[5m]) > 1
    for: 30m
    labels:
      severity: critical
- name: tempo_autoscaling
  rules:
  - alert: TempoAutoscalerNotActive
    annotations:
      message: The Horizontal Pod Autoscaler (HPA) {{ $labels.horizontalpodautoscaler
        }} in {{ $labels.namespace }} is not active.
      runbook_url: https://grafana.com/docs/tempo/latest/operators-guide/tempo-runbooks/#tempoautoscalernotactive
    expr: |
      (
          label_replace((
            kube_horizontalpodautoscaler_status_condition{condition="ScalingActive",status="false"}
            # Match only Tempo namespaces.
            * on(cluster, namespace) group_left max by(cluster, namespace) (cortex_build_info)
            # Add "metric" label.
            + on(cluster, namespace, horizontalpodautoscaler) group_right label_replace(kube_horizontalpodautoscaler_spec_target_metric*0, "metric", "$1", "metric_name", "(.+)")
            > 0),
            "scaledObject", "$1", "horizontalpodautoscaler", "keda-hpa-(.*)"
          )
      )
      # Alert only if the scaling metric exists and is > 0. If the KEDA ScaledObject is configured to scale down 0,
      # then HPA ScalingActive may be false when expected to run 0 replicas. In this case, the scaling metric exported
      # by KEDA could not exist at all or being exposed with a value of 0.
      and on (cluster, namespace, metric, scaledObject)
      (label_replace(keda_scaler_metrics_value, "namespace", "$0", "exported_namespace", ".+") > 0)
    for: 1h
    labels:
      severity: critical
  - alert: TempoAutoscalerKedaFailing
    annotations:
      message: The Keda ScaledObject {{ $labels.scaledObject }} in {{ $labels.namespace
        }} is experiencing errors.
      runbook_url: https://grafana.com/docs/tempo/latest/operators-guide/tempo-runbooks/#tempoautoscalerkedafailing
    expr: |
      (
          # Find KEDA scalers reporting errors.
          label_replace(rate(keda_scaler_errors[5m]), "namespace", "$1", "exported_namespace", "(.*)")
          # Match only Tempo namespaces.
          * on(cluster, namespace) group_left max by(cluster, namespace) (cortex_build_info)
      )
      > 0
    for: 1h
    labels:
      severity: critical
- name: tempo_continuous_test
  rules:
  - alert: TempoContinuousTestNotRunningOnWrites
    annotations:
      message: Tempo continuous test {{ $labels.test }} in {{ $labels.cluster }}/{{
        $labels.namespace }} is not effectively running because writes are failing.
      runbook_url: https://grafana.com/docs/tempo/latest/operators-guide/tempo-runbooks/#tempocontinuoustestnotrunningonwrites
    expr: |
      sum by(cluster, namespace, test) (rate(tempo_continuous_test_writes_failed_total[5m])) > 0
    for: 1h
    labels:
      severity: warning
  - alert: TempoContinuousTestNotRunningOnReads
    annotations:
      message: Tempo continuous test {{ $labels.test }} in {{ $labels.cluster }}/{{
        $labels.namespace }} is not effectively running because queries are failing.
      runbook_url: https://grafana.com/docs/tempo/latest/operators-guide/tempo-runbooks/#tempocontinuoustestnotrunningonreads
    expr: |
      sum by(cluster, namespace, test) (rate(tempo_continuous_test_queries_failed_total[5m])) > 0
    for: 1h
    labels:
      severity: warning
  - alert: TempoContinuousTestFailed
    annotations:
      message: Tempo continuous test {{ $labels.test }} in {{ $labels.cluster }}/{{
        $labels.namespace }} failed when asserting query results.
      runbook_url: https://grafana.com/docs/tempo/latest/operators-guide/tempo-runbooks/#tempocontinuoustestfailed
    expr: |
      sum by(cluster, namespace, test) (rate(tempo_continuous_test_query_result_checks_failed_total[10m])) > 0
    labels:
      severity: warning
